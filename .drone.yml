kind: pipeline
type: docker
name: default

trigger:
  event:
    exclude:
      - promote

steps:
  - name: install
    image: node:18
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18
    pull: always
    commands:
      - npm run check-format

  - name: build
    image: node:18
    pull: always
    commands:
      - npm run build

  # Build a development image when there is a push on develop branch
  - name: docker build dev
    image: plugins/docker
    pull: always
    settings:
      repo: repo/image
      tags: dev-${DRONE_COMMIT}
      dockerfile: Dockerfile
      dry_run: true
    when:
      branch:
        - develop

  # Build a production image when there is a push on main branch
  - name: docker build release
    image: plugins/docker
    pull: always
    settings:
      repo: repo/image
      tags: ${DRONE_TAG}
      dockerfile: Dockerfile
      dry_run: true
    when:
      branch:
        - main

# Promote a pre-production release from develop branch
---
kind: pipeline
type: docker
name: deploy-pre-production

trigger:
  event:
    - promote
  target:
    - pre-production
  branch:
    - develop

steps:
  - name: install
    image: node:18
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18
    pull: always
    commands:
      - npm run check-format

  - name: build
    image: node:18
    pull: always
    commands:
      - npm run build

  - name: build dev docker-image
    image: plugins/docker
    pull: always
    settings:
      repo: repo/image
      tags: dev-${DRONE_COMMIT}
      dry_run: true
      dockerfile: Dockerfile
      output: web3mail-dev-image.tar

  - name: transfer docker-image to server
    image: appleboy/drone-scp
    pull: always
    settings:
      host:
        from_secret: pre-production-domain
      username:
        from_secret: ssh-user-team-product-server
      password:
        from_secret: ssh-key-team-product-server
      port: 22
      source: web3mail-dev-image.tar
      target: ./app-demo/pre-production/web3mail/
      strip_components: 1

  - name: deploy to pre-production
    image: appleboy/drone-ssh
    pull: always
    settings:
      host:
        from_secret: pre-production-domain
      username:
        from_secret: ssh-user-team-product-server
      password:
        from_secret: ssh-key-team-product-server
      port: 22
      script:
        - docker load -i ./app-demo/pre-production/web3mail/web3mail-dev-image.tar
        - docker run -d -p 80:80 web3mail-dev-image:dev-${DRONE_COMMIT}

# Promote a production release from main branch
---
kind: pipeline
type: docker
name: deploy-production

trigger:
  event:
    - promote
  target:
    - production
  branch:
    - main

steps:
  - name: install
    image: node:18
    pull: always
    commands:
      - node -v
      - npm -v
      - npm ci

  - name: format
    image: node:18
    pull: always
    commands:
      - npm run check-format

  - name: build
    image: node:18
    pull: always
    commands:
      - npm run build

  - name: build docker-image
    image: plugins/docker
    pull: always
    settings:
      repo: repo/image
      tags: ${DRONE_TAG}
      dockerfile: Dockerfile
      dry_run: true
      output: web3mail-image.tar

  - name: transfer docker-image to server
    image: appleboy/drone-scp
    pull: always
    settings:
      host:
        from_secret: pre-production-domain
      username:
        from_secret: ssh-user-team-product-server
      password:
        from_secret: ssh-key-team-product-server
      port: 22
      source: web3mail-image.tar
      target: ./app-demo/production/web3mail/
      strip_components: 1

  - name: deploy to production
    image: appleboy/drone-ssh
    pull: always
    settings:
      host:
        from_secret: production-domain
      username:
        from_secret: ssh-user-team-product-server
      password:
        from_secret: ssh-key-team-product-server
      port: 22
      script:
        - docker load -i ./app-demo/production/web3mail/web3mail-image.tar
        - docker run -d -p 80:80 web3mail-image:${DRONE_TAG}
